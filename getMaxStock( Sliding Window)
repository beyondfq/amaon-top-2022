###########################################################################
给一个int数组，里面是股票, 全是正数，stock表示第i个月的股票。
还有一个int k。问连续k个月的股票和的最大值。这连续k个月里不能有重复的数字。
sliding window。注意返回值是long int， 如果用了int有隐藏的test case会过不了。
############################################################################
 
Example 1:
 
Input: 
stocks = [1, 4, 2, 10, 2, 3, 1, 0, 20]
Output:
24

Example 2:
 
Input: 
stocks = [1,2,7,7,4,3,6]
Output:
14

############################################################################

stocks = [1,2,7,7,4,3,6]
k = 3
def checkDuplicate(arr):
    for item in arr:
        if arr.count(item)>1:
            return True
    #set1 = set(arr)
    #if len(set1) != len(arr):
    #   return True
    
def getMaxStock(stocks, k):
    if len(stocks) < k:
        return -1
    if len(stocks) == k:
        if checkDuplicate(stocks):
            return -1
        return sum(stocks)
    
    currSum = sum(stocks[:k])
    maxStock = currSum
    for i in range(len(stocks)-k+1):
        if i != 0:
            currSum= currSum + stocks[i+k-1] - stocks[i-1]
        if checkDuplicate(stocks[i:i+k]):
            continue
        if currSum > maxStock:
            maxStock = currSum        
            
    return maxStock
    
res = getMaxStock(stocks, k)
print(res)

